<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblDin.Text" xml:space="preserve">
    <value> of </value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="lblRepetitia.Text" xml:space="preserve">
    <value>Repetition </value>
  </data>
  <data name="s0001" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="s0002" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="abAddNovena.Label" xml:space="preserve">
    <value>Add novena</value>
  </data>
  <data name="chkAlarma.Content" xml:space="preserve">
    <value>Daily alarm</value>
  </data>
  <data name="e0005" xml:space="preserve">
    <value>You have chosen to start the novena with a delay. You cannot program the beginning of the novena in the past, please choose a date in the future.</value>
  </data>
  <data name="e0006" xml:space="preserve">
    <value>Please fix the following error to procede with saving:</value>
  </data>
  <data name="e0007" xml:space="preserve">
    <value>Please fix the following errors to procede with saving:</value>
  </data>
  <data name="lblData.Text" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="rbNtimes_post.Text" xml:space="preserve">
    <value>times</value>
  </data>
  <data name="lblDuration.Text" xml:space="preserve">
    <value>Duration in days</value>
  </data>
  <data name="e0011" xml:space="preserve">
    <value>The duration of the novena must be greater than 0.</value>
  </data>
  <data name="s0012" xml:space="preserve">
    <value>Inactive</value>
  </data>
  <data name="lblStartAt.Text" xml:space="preserve">
    <value>Start at day</value>
  </data>
  <data name="chkDelayedStart.Content" xml:space="preserve">
    <value>Start at a future date</value>
  </data>
  <data name="lblLaOra.Text" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="s0016" xml:space="preserve">
    <value>Selection Mode</value>
  </data>
  <data name="s0017" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="lblNovena.Text" xml:space="preserve">
    <value>Novena</value>
  </data>
  <data name="e0019" xml:space="preserve">
    <value>The Novena Cannot be Activated</value>
  </data>
  <data name="e0020" xml:space="preserve">
    <value>The Novena Cannot Be Saved</value>
  </data>
  <data name="s0021" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="lblNumeNovena.Text" xml:space="preserve">
    <value>Novena Name</value>
  </data>
  <data name="rbInfiniteLoop.Content" xml:space="preserve">
    <value>Repeat continuously (loop)</value>
  </data>
  <data name="chkRepeat.Content" xml:space="preserve">
    <value>Repeat after conclusion</value>
  </data>
  <data name="s0025" xml:space="preserve">
    <value>Are you sure you want to delete this novena?</value>
  </data>
  <data name="e0026" xml:space="preserve">
    <value>Specify a name for the novena.</value>
  </data>
  <data name="s0027" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="s0028" xml:space="preserve">
    <value>Delete Selection</value>
  </data>
  <data name="s0029" xml:space="preserve">
    <value>Delete Novena</value>
  </data>
  <data name="s0030" xml:space="preserve">
    <value>Delete Selected Novena</value>
  </data>
  <data name="s0031" xml:space="preserve">
    <value>Day {0}</value>
  </data>
  <data name="togIsActive.OffContent" xml:space="preserve">
    <value>Inactive</value>
  </data>
  <data name="togIsActive.OnContent" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="abDeleteSelection.Label" xml:space="preserve">
    <value>Delete selection</value>
  </data>
  <data name="abMultiselect.Label" xml:space="preserve">
    <value>Selection mode</value>
  </data>
  <data name="ButtonCancel.Label" xml:space="preserve">
    <value>Cancel changes</value>
  </data>
  <data name="ButtonDelete.Label" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="ButtonSave.Label" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="DeleteButton.Text" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="e0001" xml:space="preserve">
    <value>Please input the duration of the novena in days.</value>
  </data>
  <data name="e0002" xml:space="preserve">
    <value>The duration must be a number.</value>
  </data>
  <data name="e0003" xml:space="preserve">
    <value>The duration must be greater than 0.</value>
  </data>
  <data name="lblZiua.Text" xml:space="preserve">
    <value>Day</value>
  </data>
  <data name="rbNtimes_pre.Content" xml:space="preserve">
    <value />
  </data>
  <data name="s0018" xml:space="preserve">
    <value>Novena</value>
  </data>
  <data name="s0023" xml:space="preserve">
    <value>Are you sure you want to delete these novenas?</value>
  </data>
  <data name="s0024" xml:space="preserve">
    <value>Delete {0} selected novenas</value>
  </data>
  <data name="s0026" xml:space="preserve">
    <value>This novena is currently running.</value>
  </data>
  <data name="s0003" xml:space="preserve">
    <value>{0} minutes</value>
  </data>
  <data name="s0004" xml:space="preserve">
    <value>1 hour</value>
  </data>
  <data name="s0005" xml:space="preserve">
    <value>{0} hours</value>
  </data>
  <data name="lblAlarmTone.Text" xml:space="preserve">
    <value>Alarm tone</value>
  </data>
  <data name="s0007" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="lbTest.Text" xml:space="preserve">
    <value>Test</value>
  </data>
  <data name="s0008" xml:space="preserve">
    <value>Vibrate</value>
  </data>
  <data name="e0004" xml:space="preserve">
    <value>Starting date is scheduled in the past.</value>
  </data>
  <data name="lblIntentieNovena.Text" xml:space="preserve">
    <value>Intention</value>
  </data>
  <data name="s0006" xml:space="preserve">
    <value>Daily</value>
  </data>
  <data name="lblDayOfWeek.Text" xml:space="preserve">
    <value>Repeat only in a certain day of the week</value>
  </data>
</root>